export const translations = {
  en: {
    settings: {
      title: 'Settings',
      preferences: 'Preferences',
      theme: 'Theme',
      language: 'Language',
      measurementUnits: 'Measurement Units',
      metric: 'Metric',
      imperial: 'Imperial',
      automaticSearch: 'Automatic Search',
      automaticImageSearch: 'Automatic Image Search',
      automaticImageSearchDesc:
        'Automatically search for relevant images in chat responses',
      automaticVideoSearch: 'Automatic Video Search',
      automaticVideoSearchDesc:
        'Automatically search for relevant videos in chat responses',
      systemInstructions: 'System Instructions',
      systemInstructionsPlaceholder: 'Any special instructions for the LLM',
      modelSettings: 'Model Settings',
      chatModelProvider: 'Chat Model Provider',
      chatModel: 'Chat Model',
      embeddingModelProvider: 'Embedding Model Provider',
      embeddingModel: 'Embedding Model',
      apiKeys: 'API Keys',
      customOpenAIApiKey: 'Custom OpenAI API Key',
      customOpenAIBaseURL: 'Custom OpenAI Base URL',
      openAIApiKey: 'OpenAI API Key',
      ollamaApiUrl: 'Ollama API URL',
      ollamaApiKey: 'Ollama API Key (Can be left blank)',
      ollamaApiKeyPlaceholder: 'Ollama API Key',
      ollama2ApiUrl: 'Ollama Turbo API URL',
      ollama2ApiKey: 'Ollama Turbo API Key (Required)',
      ollama2ApiKeyPlaceholder: 'Ollama Turbo API Key',
      groqApiKey: 'GROQ API Key',
      anthropicApiKey: 'Anthropic API Key',
      geminiApiKey: 'Gemini API Key',
      deepseekApiKey: 'Deepseek API Key',
      aimlApiKey: 'AI/ML API Key',
      lmStudioApiUrl: 'LM Studio API URL',
      elevenLabsApiKey: 'ElevenLabs API Key',
      vllmApiUrl: 'vLLM API URL',
      vllmApiKey: 'vLLM API Key (Optional)',
      ttsProvider: 'Text-to-Speech Provider',
      ttsProviderBrowser: 'Browser (Free)',
      ttsProviderElevenLabs: 'ElevenLabs (Premium)',
      elevenLabsVoice: 'ElevenLabs Voice',
      elevenLabsVoiceDesc: 'Select your preferred voice for text-to-speech',
      elevenLabsModel: 'ElevenLabs Model',
      elevenLabsModelDesc: 'Choose between quality and speed',
      searchSettings: 'Search Settings',
      searxngUrl: 'Searxng URL',
      searxngUrlDesc:
        'Custom Searxng instance URL (e.g., https://searx.example.com)',
      searxngUrlPlaceholder: 'https://searx.example.com',
      noModelsAvailable: 'No models available',
      invalidProvider: 'Invalid provider, please check backend logs',
      modelName: 'Model Name',
      modelNamePlaceholder: 'Model name',
      newsRegion: 'News Region',
      newsRegionDesc: 'Select your preferred region for news content',
      globalNews: 'Global',
      dachNews: 'DACH Region',
      usNews: 'United States',
      ukNews: 'United Kingdom',
      franceNews: 'France',
    },
    theme: {
      light: 'Light',
      dark: 'Dark',
      system: 'System',
    },
    sidebar: {
      home: 'Home',
      discover: 'Discover',
      library: 'Library',
    },
    chat: {
      researchBegins: 'Research begins here.',
      searchPlaceholder: 'Ask anything...',
      thinkingTitle: 'Thinking',
      sources: 'Sources',
      answer: 'Answer',
      followUp: 'Follow up',
      followUpPlaceholder: 'Ask a follow-up',
      copy: 'Copy',
      rewrite: 'Rewrite',
      newChat: 'New Chat',
      focusMode: 'Focus mode',
      searchWeb: 'Search the web',
      attach: 'Attach file',
      attachedFiles: 'Attached files',
      uploading: 'Uploading..',
      files: 'files',
      add: 'Add',
      clear: 'Clear',
      // copilot: 'Copilot',
      moreOptions: 'More options',
      searchImages: 'Search images',
      searchVideos: 'Search videos',
      viewMore: 'View {count} more',
      video: 'Video',
      thinkingProcess: 'Thinking Process',
      related: 'Related',
      copilot: 'Copilot',
    },
    discover: {
      title: 'Discover',
      todaysNews: "Today's News",
      trending: 'Trending',
      technology: 'Technology',
      science: 'Science',
      business: 'Business',
      entertainment: 'Entertainment',
      sports: 'Sports',
      health: 'Health',
      games: 'Games',
      loading: 'Loading...',
      readMore: 'Read more',
      poweredBy: 'Powered by',
      noArticles:
        'No articles available. Please check your Searxng configuration in Settings.',
      summaryPrompt: 'Summary:',
    },
    library: {
      title: 'Library',
      yourChats: 'Your Chats',
      noChats: 'No chats yet',
      deleteChat: 'Delete chat',
      confirmDelete: 'Are you sure you want to delete this chat?',
      cancel: 'Cancel',
      delete: 'Delete',
      timeAgo: '{time} ago',
    },
    focus: {
      all: 'All',
      allDescription: 'Searches across all of the internet',
      academic: 'Academic',
      academicDescription: 'Search in published academic papers',
      writing: 'Writing',
      writingDescription: 'Chat without searching the web',
      wolframAlpha: 'Wolfram Alpha',
      wolframAlphaDescription: 'Computational knowledge engine',
      youtube: 'Youtube',
      youtubeDescription: 'Search and watch videos',
      reddit: 'Reddit',
      redditDescription: 'Search for discussions and opinions',
      focus: 'Focus',
    },
    weather: {
      humidity: 'Humidity: {percentage}%',
      now: 'Now',
      errorFetching: 'Error fetching weather data',
    },
    navbar: {
      timeAgo: '{time} ago',
      exportAsMarkdown: 'Export as Markdown',
      exportAsPDF: 'Export as PDF',
      chatExport: 'Chat Export',
      exportedOn: 'Exported on',
      citations: 'Citations',
      user: 'User',
      assistant: 'Assistant',
    },
    errors: {
      couldNotLoadNews: 'Could not load news.',
      failedToConnect:
        'Failed to connect to the server. Please try again later.',
      errorFetchingData: 'Error fetching data',
      failedToDeleteChat: 'Failed to delete chat',
      configurationNotReady:
        'Cannot send message before the configuration is ready',
      noModelsConfigured:
        "Looks like you haven't configured any chat model providers. Please configure them from the settings page or the config file.",
      noModelsAvailable: 'No models available',
      useLanguageError: 'useLanguage must be used within a LanguageProvider',
    },
    time: {
      second: 'second',
      seconds: 'seconds',
      minute: 'minute',
      minutes: 'minutes',
      hour: 'hour',
      hours: 'hours',
      day: 'day',
      days: 'days',
      year: 'year',
      years: 'years',
    },
    optimization: {
      speed: 'Speed',
      speedDescription: 'Fastest responses with basic search depth',
      balanced: 'Balanced',
      balancedDescription: 'Good balance between speed and quality',
      quality: 'Quality',
      qualityDescription: 'Most comprehensive analysis and best results',
    },
  },
  de: {
    settings: {
      title: 'Einstellungen',
      preferences: 'Präferenzen',
      theme: 'Design',
      language: 'Sprache',
      measurementUnits: 'Maßeinheiten',
      metric: 'Metrisch',
      imperial: 'Imperial',
      automaticSearch: 'Automatische Suche',
      automaticImageSearch: 'Automatische Bildersuche',
      automaticImageSearchDesc:
        'Automatisch nach relevanten Bildern in Chat-Antworten suchen',
      automaticVideoSearch: 'Automatische Videosuche',
      automaticVideoSearchDesc:
        'Automatisch nach relevanten Videos in Chat-Antworten suchen',
      systemInstructions: 'Systemanweisungen',
      systemInstructionsPlaceholder: 'Spezielle Anweisungen für das LLM',
      modelSettings: 'Modell-Einstellungen',
      chatModelProvider: 'Chat-Modell-Anbieter',
      chatModel: 'Chat-Modell',
      embeddingModelProvider: 'Embedding-Modell-Anbieter',
      embeddingModel: 'Embedding-Modell',
      apiKeys: 'API-Schlüssel',
      customOpenAIApiKey: 'Benutzerdefinierter OpenAI API-Schlüssel',
      customOpenAIBaseURL: 'Benutzerdefinierte OpenAI Basis-URL',
      openAIApiKey: 'OpenAI API-Schlüssel',
      ollamaApiUrl: 'Ollama API URL',
      ollamaApiKey: 'Ollama API-Schlüssel (Kann leer gelassen werden)',
      ollamaApiKeyPlaceholder: 'Ollama API-Schlüssel',
      ollama2ApiUrl: 'Ollama Turbo API URL',
      ollama2ApiKey: 'Ollama Turbo API-Schlüssel (Erforderlich)',
      ollama2ApiKeyPlaceholder: 'Ollama Turbo API-Schlüssel',
      groqApiKey: 'GROQ API-Schlüssel',
      anthropicApiKey: 'Anthropic API-Schlüssel',
      geminiApiKey: 'Gemini API-Schlüssel',
      deepseekApiKey: 'Deepseek API-Schlüssel',
      aimlApiKey: 'AI/ML API-Schlüssel',
      lmStudioApiUrl: 'LM Studio API URL',
      elevenLabsApiKey: 'ElevenLabs API-Schlüssel',
      vllmApiUrl: 'vLLM API URL',
      vllmApiKey: 'vLLM API-Schlüssel (Optional)',
      ttsProvider: 'Text-zu-Sprache-Anbieter',
      ttsProviderBrowser: 'Browser (Kostenlos)',
      ttsProviderElevenLabs: 'ElevenLabs (Premium)',
      elevenLabsVoice: 'ElevenLabs Stimme',
      elevenLabsVoiceDesc: 'Wähle deine bevorzugte Stimme für Text-zu-Sprache',
      elevenLabsModel: 'ElevenLabs Modell',
      elevenLabsModelDesc: 'Wähle zwischen Qualität und Geschwindigkeit',
      searchSettings: 'Sucheinstellungen',
      searxngUrl: 'Searxng URL',
      searxngUrlDesc:
        'Eigene Searxng-Instanz URL (z.B. https://searx.example.com)',
      searxngUrlPlaceholder: 'https://searx.example.com',
      noModelsAvailable: 'Keine Modelle verfügbar',
      invalidProvider: 'Ungültiger Anbieter, bitte Backend-Logs prüfen',
      modelName: 'Modellname',
      modelNamePlaceholder: 'Modellname',
      newsRegion: 'Nachrichtenregion',
      newsRegionDesc:
        'Wählen Sie Ihre bevorzugte Region für Nachrichteninhalte',
      globalNews: 'Global',
      dachNews: 'DACH-Region',
      usNews: 'Vereinigte Staaten',
      ukNews: 'Vereinigtes Königreich',
      franceNews: 'Frankreich',
    },
    theme: {
      light: 'Hell',
      dark: 'Dunkel',
      system: 'System',
    },
    sidebar: {
      home: 'Startseite',
      discover: 'Entdecken',
      library: 'Bibliothek',
    },
    chat: {
      researchBegins: 'Recherche beginnt hier.',
      searchPlaceholder: 'Frage alles...',
      thinkingTitle: 'Denkt nach',
      sources: 'Quellen',
      answer: 'Antwort',
      followUp: 'Nachfrage',
      followUpPlaceholder: 'Stelle eine Folgefrage',
      copy: 'Kopieren',
      rewrite: 'Umschreiben',
      newChat: 'Neuer Chat',
      focusMode: 'Fokus-Modus',
      searchWeb: 'Im Web suchen',
      attach: 'Datei anhängen',
      attachedFiles: 'Angehängte Dateien',
      uploading: 'Wird hochgeladen..',
      files: 'Dateien',
      add: 'Hinzufügen',
      clear: 'Löschen',
      // copilot: 'Copilot',
      moreOptions: 'Weitere Optionen',
      searchImages: 'Bilder suchen',
      searchVideos: 'Videos suchen',
      viewMore: '{count} weitere anzeigen',
      video: 'Video',
      thinkingProcess: 'Denkprozess',
      related: 'Verwandt',
      copilot: 'Copilot',
    },
    discover: {
      title: 'Entdecken',
      todaysNews: 'Nachrichten heute',
      trending: 'Trends',
      technology: 'Technologie',
      science: 'Wissenschaft',
      business: 'Wirtschaft',
      entertainment: 'Unterhaltung',
      sports: 'Sport',
      health: 'Gesundheit',
      games: 'Spiele',
      loading: 'Lädt...',
      readMore: 'Weiterlesen',
      poweredBy: 'Unterstützt von',
      noArticles:
        'Keine Artikel verfügbar. Bitte überprüfe deine Searxng-Konfiguration in den Einstellungen.',
      summaryPrompt: 'Zusammenfassung:',
    },
    library: {
      title: 'Bibliothek',
      yourChats: 'Deine Chats',
      noChats: 'Noch keine Chats',
      deleteChat: 'Chat löschen',
      confirmDelete: 'Möchtest du diesen Chat wirklich löschen?',
      cancel: 'Abbrechen',
      delete: 'Löschen',
      timeAgo: 'Vor {time}',
    },
    focus: {
      all: 'Alle',
      allDescription: 'Sucht im gesamten Internet',
      academic: 'Akademisch',
      academicDescription:
        'Suche in veröffentlichten wissenschaftlichen Arbeiten',
      writing: 'Schreiben',
      writingDescription: 'Chat ohne Websuche',
      wolframAlpha: 'Wolfram Alpha',
      wolframAlphaDescription: 'Computergestützte Wissensmaschine',
      youtube: 'Youtube',
      youtubeDescription: 'Videos suchen und ansehen',
      reddit: 'Reddit',
      redditDescription: 'Nach Diskussionen und Meinungen suchen',
      focus: 'Fokus',
    },
    weather: {
      humidity: 'Luftfeuchtigkeit: {percentage}%',
      now: 'Jetzt',
      errorFetching: 'Fehler beim Abrufen der Wetterdaten',
    },
    navbar: {
      timeAgo: 'Vor {time}',
      exportAsMarkdown: 'Als Markdown exportieren',
      exportAsPDF: 'Als PDF exportieren',
      chatExport: 'Chat-Export',
      exportedOn: 'Exportiert am',
      citations: 'Zitate',
      user: 'Benutzer',
      assistant: 'Assistent',
    },
    errors: {
      couldNotLoadNews: 'Nachrichten konnten nicht geladen werden.',
      failedToConnect:
        'Verbindung zum Server fehlgeschlagen. Bitte versuche es später erneut.',
      errorFetchingData: 'Fehler beim Abrufen der Daten',
      failedToDeleteChat: 'Fehler beim Löschen des Chats',
      configurationNotReady:
        'Nachricht kann nicht gesendet werden, bevor die Konfiguration bereit ist',
      noModelsConfigured:
        'Es scheint, als hättest du keine Chat-Modell-Anbieter konfiguriert. Bitte konfiguriere sie über die Einstellungsseite oder die Konfigurationsdatei.',
      noModelsAvailable: 'Keine Modelle verfügbar',
      useLanguageError:
        'useLanguage muss innerhalb eines LanguageProviders verwendet werden',
    },
    time: {
      second: 'Sekunde',
      seconds: 'Sekunden',
      minute: 'Minute',
      minutes: 'Minuten',
      hour: 'Stunde',
      hours: 'Stunden',
      day: 'Tag',
      days: 'Tage',
      year: 'Jahr',
      years: 'Jahre',
    },
    optimization: {
      speed: 'Schnell',
      speedDescription:
        'Schnellste Antworten mit grundlegender Geschwindigkeit',
      balanced: 'Ausgewogen',
      balancedDescription:
        'Gutes Gleichgewicht zwischen Geschwindigkeit und Qualität',
      quality: 'Qualität',
      qualityDescription: 'Umfassendste Analyse und beste Ergebnisse',
    },
  },
};

export type Language = keyof typeof translations;
export type TranslationKey = keyof typeof translations.en;
